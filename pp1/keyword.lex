"void"           {return T_Void;}
"int"            {return T_Int;}
"double"         {return T_Double;}
"bool"           {return T_Bool;}
"string"         {return T_String;}
"class"          {return T_Class;}
"interface"      {return T_Interface;}
"null"           {return T_Null;}
"this"           {return T_This;}
"extends"        {return T_Extends;}
"implements"     {return T_Implements;}
"for"            {return T_For;}
"while"          {return T_While;}
"if"             {return T_If;}
"else"           {return T_Else;}
"return"         {return T_Return;}
"break"          {return T_Break;}
"new"            {return T_New;}
"NewArray"       {return T_NewArray;}
"Print"          {return T_Print;}
"ReadInteger"    {return T_ReadInteger;}
"ReadLine"       {return T_ReadLine;}
"+"    {return '+';}
"-"    {return '-';}
"*"    {return '*';}
"/"    {return '/';}
"%"    {return '%';}
"<"    {return '<';}
"<="   {return T_LessEqual;}
">"    {return '>';}
">="   {return T_GreaterEqual;}
"="    {return '=';}
"=="   {return T_Equal;}
"!="   {return T_NotEqual;}
"&&"   {return T_And;}
"||"   {return T_Or;}
"!"    {return '!';}
";"    {return ';';}
","    {return ',';}
"."    {return '.';}
"[]"   {return T_NewArray;}
"["    {return '[';}
"]"    {return ']';}
"("    {return '(';}
")"    {return ')';}
"{"    {return '{';}
"}"    {return '}';}
